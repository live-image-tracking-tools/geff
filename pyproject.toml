[dependency-groups]
test = ["pytest>=8.3.4", "pytest-cov>=6.2"]
test-third-party = [
    { include-group = "test" },
    "geff[spatial-graph,ctc,rx]",
    "lxml>=6.0.0",
]
dev = [
    { include-group = "test-third-party" },
    "ipython>=8.37.0",
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "pyright>=1.1.403",
    "ruff>=0.12.5",
    "types-networkx>=3.5.0.20250728",
    "types-pyyaml>=6.0.12.20250516",
]
docs = [
    "json-schema-for-humans>=1.4.1",
    "mike>=2.1.3",
    "mkdocs-api-autonav>=0.3.0",
    "mkdocs-include-markdown-plugin>=7.1.6",
    "mkdocs-material>=9.6.16",
    "mkdocstrings-python>=1.16.12",
    "mkdocs-typer>=0.0.3",
    "ruff>=0.12.5",
    "typing-extensions>=4.14.1",
]
bench = [
    { include-group = "test" },
    "pytest-codspeed>=4.0.0",
    "geff[rx, spatial-graph]",
]

[tool.uv]
package = false

[tool.uv.sources]
geff = { workspace = true }
geff-spec = { workspace = true }

# define this root as a workspace
[tool.uv.workspace]
members = ["packages/*"]

# https://docs.astral.sh/ruff/rules/
[tool.ruff]
line-length = 100
target-version = "py310"
fix = true
src = ["packages/**/src"]

[tool.ruff.lint]
pydocstyle = { convention = "google" }
extend-select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "ANN",  # flake8-annotations
    "RUF",  # ruff-specific rules
    "TID",  # tidy imports
    "TC",   # type checking
    "D102", # undocumented public method
    "D103", # undocumented public function
    "D300", # enforces triple double quotes on docstrings
    "D414", # empty/missing docstring section
    "D417", # undocumented parameter
]
ignore = [
    "ANN401", # disallow Any
]


[tool.ruff.lint.per-file-ignores]
"**/tests/*.py" = ["D", "ANN"]

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["packages"]
pythonpath = ["tests"]
filterwarnings = [
    "error",
    "ignore:'cgi' is deprecated and slated for removal in Python 3.13",
    # if needed, add global ignores here, for example:
    # "ignore:Some message:SomeCategory",
    "ignore:.*skipping conversion test:ImportWarning:networkx",
    "ignore:In the future `np.bool` will be defined as the corresponding NumPy scalar.",
]


# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "packages/**/src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true

[tool.pyright]
include = ["src"]
venv = ".venv"

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "raise NotImplementedError()",
    "pass",
]
[tool.coverage.run]
source = ["src/geff"]
omit = ["*/__init__.py"]

[tool.typos.default]
extend-ignore-identifiers-re = ["(?i)ome", "ser", "propert"]
